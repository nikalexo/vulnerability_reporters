"""
Parse the Mozilla Foundation Security Advisories to extract CVEs and reporters
"""

import requests
from bs4 import BeautifulSoup
import html5lib
import re
import json
import pickle
import os
from preprop import bs_preprocess

def parse_mfsa(cve_list):
    # You need to have the github repo https://github.com/mozilla/foundation-security-advisories at this path
    file_path = '../../../foundation-security-advisories/announce/'
    
    # Traverse directories
    dirlist = [ item for item in os.listdir(file_path) if os.path.isdir(os.path.join(file_path, item)) ]
    
    mfsa = dict()
    
    # Store the mfsa text in a dictionary for ease of use
    
    for directory in dirlist:
        year = directory
        filelist = [ item for item in os.listdir(file_path+directory+'/') if os.path.isfile(os.path.join(file_path+directory+'/', item)) ]
        for file in filelist:
            mfsa_id  = os.path.splitext(file)[0]
            with open(file_path+directory+'/'+file, "r") as fp:
                mfsa[mfsa_id] = fp.read()
                
    mfsa_data = dict()
    
    # Parse each report and extract date, impact, reporter, bug_id and cve (each if available). Store in dict.
    
    for report in mfsa:
        text = mfsa[report]
        date = re.search(r'(?<=announced: ).*',text)
        impact = re.search(r'(?<=impact: ).*',text)
        reporter = re.search(r'(?<=reporter: ).*',text)
        bug_id = re.search(r'(?<=bugzilla.mozilla.org/show_bug.cgi\?id=)\d*',text)
        cve = re.search(r'CVE-\d{4}-\d{4,}',text)
        data_list = [date, impact, reporter, bug_id, cve]
        for i in range(0,len(data_list)):
            field = data_list[i]
            if field is None:
                data_list[i] = ''
                #print('WARNING: Some problem with: ',report, i)
            else:
                data_list[i] = field.group(0)
        data_names = ['date', 'impact', 'reporter', 'bug_id', 'cve']
        i = 0
        temp_dict = dict()
        for name in data_names:
            temp_dict[name] = data_list[i]
            mfsa_data[report] = temp_dict
            i += 1
      
    moz_cve2rep = dict()
    
    # Get a cve2reporters dict
    
    for rep in mfsa_data:
        cve = mfsa_data[rep]['cve']
        reporter = mfsa_data[rep]['reporter']
        if cve != '' and cve in cve_list:
            if reporter != '':
                if cve not in moz_cve2rep:
                    moz_cve2rep[cve] = reporter
                else:
                    moz_cve2rep[cve] + ' and ' + reporter
    
    # Dump the data in json files
    with open('mozilla_adv.json', 'w') as fp:
        json.dump(mfsa_data, fp)
    with open('reps_mozilla.json', 'w') as fp:
        json.dump(moz_cve2rep, fp)

    print('MFSA: Extracted', len(cve_list), 'CVES with reporters for', len(moz_cve2rep),'of them.')
    