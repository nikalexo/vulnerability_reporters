import requests
import re
import json
import sys
from pymongo import MongoClient

# insert at 1, 0 is the script path (or '' in REPL)
sys.path.insert(1, './../../../cve-search/')

import lib.DatabaseLayer as db

client = MongoClient()
db1 = client.cvedb
collection1 = db1.cves

cve = collection1.find_one({"id": "CVE-2019-15891"})

if cve == '':
    logging.warning('CVE not found in mongodb')


# Load all cve ids
with open("./../../Mappings/Project_2_CVE/project2cves.json") as jf:
    project2cves = json.load(jf)

cve_list = []
for project in ['mozilla-suite', 'apache', 'linux', 'php']:
    cve_list.extend(project2cves[project])

cve_list = list(set(cve_list))

# Load full cves
full_cves = []
for cve in cve_list:
    item = collection1.find_one({"id": cve})
    if item != None:
        full_cves.append(item)

# Find already fetched Securityfocus reports
try:
    with open("./sf2info.json") as jf:
        sf2info = json.load(jf)
    print("Opened all already downloaded SF reports!")
    print(list(sf2info.keys()))
except:
    sf2info = dict()
    print("No local SF reports found!")

# Get SF references in cves
sources_cve = dict()
for cve in full_cves:
    references = cve['references']

    for ref in references:
        url_sf = 'www.securityfocus.com/bid/'
        to_search = r'((?<=' + url_sf.replace('?', '\?').replace('=', '\=') + ')'
        to_search += ').+'
        m = re.search(to_search, ref)
        try:
            sf_ref=m.group(0)
            sources_cve[cve['id']] = sf_ref
        except AttributeError:
            pass

print("Security focus ids loaded:", len(sources_cve))

# Download SFs
counter = 0
url_sf = 'https://www.securityfocus.com/bid/'

for cve in full_cves:
    rep = ''
    try:
        sf_id = sources_cve[cve['id']]
    except:
        continue
    if sf_id == '0':
        continue
    else:
        if sf_id not in sf2info:
            try:
                URL = url_sf+sf_id
                found = False
                for _ in range(15):
                    temp = requests.get(URL)
                    if temp.status_code == 200:
                        sf2info[sf_id] = temp.text
                        found = True
                        break
                if not found:
                    print('WARNING: Trouble with securityfocus bid', sf_id)
            except AttributeError:
                print('WARNING: Trouble with securityfocus bid', sf_id)
                continue

with open("./sf2info.json", "w") as jf:
    json.dump(sf2info, jf)

print("Finished!")