#!/bin/bash
file="./url"
i=0
read -r url<$file

# create bug directory containing json files with bugs if not yet available
if [ ! -d "./bugs" ]
then
    mkdir "./bugs"
fi

# get years to begin and end
part=$(awk '/<product name="apache">/{ print NR; exit}' ./../../config.xml)
lastline=$(awk '/<\/config>/{ print NR; exit}' ./../../config.xml)
i=$part
begin=0
end=0
while [ $i -lt $lastline ]
do
	content=$(awk '{if(NR=='$i') print $0}' ./../../config.xml)
	if grep -q "begin" <<< $content; then
		begin=$(cat ./../../config.xml | grep -oPm1 "(?<=<begin>)[^<]+")
	fi
    if grep -q "end" <<< $content; then
		end=$(cat ./../../config.xml | grep -oPm1 "(?<=<end>)[^<]+")
        break
	fi
	i=$((i+1))
done

for year in $(seq $begin $end)
do
    for month in {1..12}
    do
        printf -v month "%02d" $month ;
        mod=${url//\$year/$year}    # replace year in url
        mod=${mod//\$month/$month}  # replace month in url
        # request bugs per month
        wget -q -O ./bugs/apache_$year-$month.json $mod
        i=$((i+1))
        a=$(($i % 12))

        # remove json file if file contains no bugs
        if grep -Fxq "{\"bugs\":[]}" ./bugs/apache_$year-$month.json
        then
            rm ./bugs/apache_$year-$month.json
        fi

        if [ $a -eq 0 ]
        then
            sleep 60s        # Avoiding 429: Too many requests
        fi
    done
done

echo "Done"
