#!/usr/bin/env python
# coding: utf-8

# In[1]:


import json
import csv
import os
import pandas as pd
from pymongo import MongoClient
import xml.etree.ElementTree as ET


# In[2]:


root = ET.parse("./../../config.xml")

DB = root.find("mongodb").find("db").text


# In[7]:


# 1. Fill statistics.csv with data from project specific json files
projects = ["Mozilla Core/Firefox", "PHP", "Linux", "Apache httpd-server", "Thunderbird", "Mozilla Suite"]
json_files = ["bug2commits-core-firefox.json", "bug2commits-php.json", "bug2commits-linux.json", 
              "bug2commits-apache.json", "bug2commits-thunderbird.json", "bug2commits-mozilla-suite.json"]
c_moz_core = root.find("projects").find('.//product[@name=\'mozilla-core\']').find("collection").text
c_firefox = root.find("projects").find('.//product[@name=\'firefox\']').find("collection").text
c_thunderbird = root.find("projects").find('.//product[@name=\'thunderbird\']').find("collection").text
c_php = root.find("projects").find('.//product[@name=\'php\']').find("collection").text
c_linux = root.find("projects").find('.//product[@name=\'linux\']').find("collection").text
c_apache = root.find("projects").find('.//product[@name=\'apache\']').find("collection").text
collections = [[c_moz_core, c_firefox], [c_php], [c_linux], [c_apache], [c_thunderbird], [c_moz_core, c_firefox, c_thunderbird]]

first_line = ["Project","Total # bugs found in commits",
              "Total # bugs in bug tracking system", 
              "Total # fixed bugs in bug tracking system",
              "Total # fixed bugs with at least one commit",
              "% fixed bugs with at least one commit",
              "0","1","2","3","4","5","6","7","8","9","10.."]

try:
    os.remove("statistics.csv")
except:
    print("File 'statistics.csv' already deleted!")
    
with open("statistics.csv", 'a') as f:
    writer = csv.writer(f)
    writer.writerow(first_line)

client = MongoClient()
db = client[DB]
    
count = [[] for x in range(len(projects))]
total_number = [0 for x in range(len(projects))]
bugs_in_bts = [0 for x in range(len(projects))]
fixed_bugs_in_bts = [0 for x in range(len(projects))] 
perc_fixed_with_hash = [0 for x in range(len(projects))] 
               
for i in range(len(projects)):
    for collection in collections[i]:
        collection_bugs = db[collection]
        fixed_bugs_in_bts[i] += collection_bugs.count_documents({"resolution": "FIXED"})
        bugs_in_bts[i] += collection_bugs.count_documents({})
               
    count[i] = [0 for x in range(11)]
    with open(json_files[i]) as jf:
        data = json.load(jf)
    for key in data.keys():
        if len(data[key]) > 10:
            count[i][10] += 1
        else:
            count[i][len(data[key])] += 1
    
    total_number[i] = len(data) - count[i][0]
    
    # % fixed bugs with at least one commit
    counter = 0
    counter_all = 0
    for collection in collections[i]:
        collection_bugs = db[collection]
        for document in collection_bugs.find({"resolution": "FIXED"}):
            counter_all +=1 
            if str(document['id']) in data.keys() and len(data[str(document['id'])]) > 0:
                counter += 1 
    perc_fixed_with_hash[i] = counter/counter_all*100 if counter != 0 else 0
    
    # formatting for csv
    fields = [projects[i], 
              total_number[i], 
              bugs_in_bts[i], 
              fixed_bugs_in_bts[i],
              counter,
              perc_fixed_with_hash[i]]
    fields.extend(count[i])
    with open("statistics.csv", 'a') as f:
        writer = csv.writer(f)
        writer.writerow(fields)
    


# In[8]:


# 2. Statistics
data = pd.read_csv("statistics.csv")
data.head()


# In[ ]:




