from fuzzywuzzy import fuzz
import json

# Maps reporters to bugs by accordance of fields in bug documents and reporter documents for bugzilla projects
def rep2bugs_bugzilla(rep2bugs, collection_p, reporters_dict):
    reporters = []
    
    for rep in reporters_dict:
        if not rep in rep2bugs.keys():
            rep2bugs[rep] = []
        reporters.append([rep, reporters_dict[rep]['emails'], reporters_dict[rep]['alias'], reporters_dict[rep]['twitter']])
    
    print("Number of reporters added to rep2bugs:", len(rep2bugs.keys()))
    
    counter = [0 for x in range(6)]
    
    test_bug = collection_p.find_one({"creator_detail":{'nick':{"$exists": False}}})
    nick = True
    if test_bug == None:
        nick = False
    
    test_bug = collection_p.find_one({"creator_detail":{'email':{"$exists": False}}})
    email = True
    if test_bug == None:
        email = False
    
    for bug in collection_p.find({}):
        # load creator details
        creator_real_name = bug['creator_detail']['real_name'].lower().strip(" ")
        if nick:
            creator_nick = bug['creator_detail']['nick'].lower().strip(" ")
        else:
            creator_nick = "!Undifined!Undifined!Undifined!"
        creator_name = bug['creator_detail']['name'].lower().strip(" ")
        if email:
            creator_email = bug['creator_detail']['email'].lower().strip(" ")
        else:
            creator_email = "!Undifined!Undifined!Undifined!"
        
        found = False
        
        for rep in reporters:
            # load reporter details
            rep_name_not_changed = rep[0]
            
            rep_name = rep[0].lower()
            rep_emails = [r.lower() for r in rep[1] if r != None]
            rep_aliases = [r.lower() for r in rep[2] if r != None]
            rep_twitters = [r.lower() for r in rep[3] if r != None]
            
            # check if creator of bug and reporter match
            if creator_real_name == rep_name:
                rep2bugs[rep_name_not_changed].append(bug['id'])
                counter[0] += 1
                found = True
                #print(creator_real_name)
            elif creator_email in rep_emails or creator_email == rep_name or creator_email in rep_twitters:
                rep2bugs[rep_name_not_changed].append(bug['id'])
                counter[1] += 1
                found = True
                #print(creator_real_name)
            elif creator_nick == rep_name or creator_nick in rep_aliases or creator_nick in rep_twitters:
                rep2bugs[rep_name_not_changed].append(bug['id'])
                counter[2] += 1
                found = True
                #print(creator_real_name)
            elif creator_name == rep_name or creator_name in rep_aliases or creator_name in rep_twitters or creator_name in rep_emails: 
                rep2bugs[rep_name_not_changed].append(bug['id'])
                counter[3] += 1
                found = True
                #print(creator_real_name)
                
            if found:
                break
                
        if not found:     
            for rep in reporters:
                rep_name_not_changed = rep[0]
            
                rep_name = rep[0].lower()
                rep_emails = [r.lower() for r in rep[1] if r != None]
                rep_aliases = [r.lower() for r in rep[2] if r != None]
                rep_twitters = [r.lower() for r in rep[3] if r != None]
                
                if (len(creator_real_name) > 5 and fuzz.ratio(creator_real_name, rep_name) > 90) or (len(creator_nick) > 5 and fuzz.ratio(creator_nick, rep_name)) > 90:
                    rep2bugs[rep_name_not_changed].append(bug['id'])
                    counter[4] += 1
                    found = True
                    #print(creator_real_name)
                else:
                    for alias in rep_aliases:
                        if len(alias) > 5 and (len(creator_real_name) > 5 and fuzz.ratio(creator_real_name, alias)) > 90 or (len(creator_nick) > 5 and fuzz.ratio(creator_nick, alias) > 90):
                            rep2bugs[rep_name_not_changed].append(bug['id'])
                            counter[5] += 1
                            found = True
                            #print(creator_real_name)
                            break
                if found:
                    break     
                
    return counter

# Maps reporters to bugs by accordance of fields in bug documents and reporter documents for php
def rep2bugs_php(rep2bugs, collection_p, reporters_dict):
    reporters = []
    
    for rep in reporters_dict:
        if not rep in rep2bugs.keys():
            rep2bugs[rep] = []
        reporters.append([rep, reporters_dict[rep]['emails'], reporters_dict[rep]['alias'], reporters_dict[rep]['twitter']])
    
    print("Number of reporters added to rep2bugs:", len(rep2bugs.keys()))
    
    counter = [0 for x in range(6)]
    
    bugs = []
    
    for bug in collection_p.find({}):
        # load creator details
        bugs.append(bug['id'])
    
    for id_ in bugs:
        bug = collection_p.find_one({'id': id_})
        #print(bug['id'])
        creator = bug['creator'].lower()
        
        found = False
        
        for rep in reporters:
            # load reporter details
            rep_name_not_changed = rep[0]
            
            rep_name = rep[0].lower()
            rep_emails = [r.lower() for r in rep[1] if r != None]
            rep_aliases = [r.lower() for r in rep[2] if r != None]
            rep_twitters = [r.lower() for r in rep[3] if r != None]
            
            # check if creator of bug and reporter match
            if creator == rep_name:
                rep2bugs[rep_name_not_changed].append(bug['id'])
                counter[0] += 1
                found = True
                #print(creator) 
                break
            for email in rep_emails:
                if email in creator:
                    rep2bugs[rep_name_not_changed].append(bug['id'])
                    counter[1] += 1
                    found = True
                    #print(creator)
                    break
            if found:
                break
            for twitter in rep_twitters:
                if twitter == creator:
                    rep2bugs[rep_name_not_changed].append(bug['id'])
                    counter[2] += 1
                    found = True
                    #print(creator)
                    break
            if found:
                break
            for alias in rep_aliases:
                if alias == creator:
                    rep2bugs[rep_name_not_changed].append(bug['id'])
                    counter[3] += 1
                    found = True
                    #print(creator)
                    break
            if found:
                break
         
        if not found:
            for rep in reporters:
                rep_name_not_changed = rep[0]
            
                rep_name = rep[0].lower()
                rep_emails = [r.lower() for r in rep[1] if r != None]
                rep_aliases = [r.lower() for r in rep[2] if r != None]
                rep_twitters = [r.lower() for r in rep[3] if r != None]
                if fuzz.ratio(creator, rep_name) > 90:
                    rep2bugs[rep_name_not_changed].append(bug['id'])
                    counter[4] += 1
                    found = True
                    #print(creator)
                    break
                for alias in rep_aliases:
                    if fuzz.ratio(creator, alias) > 90:
                        rep2bugs[rep_name_not_changed].append(bug['id'])
                        counter[5] += 1
                        found = True
                        #print(creator)
                        break
                if found:
                    break
                for twitter in rep_twitters:
                    if fuzz.ratio(creator, twitter) > 90:
                        rep2bugs[rep_name_not_changed].append(bug['id'])
                        counter[5] += 1
                        found = True
                        #print(creator)
                        break
                if found:
                    break
                    

    return counter
        
def load_reporters():
    rep2info = dict()
    with open('./../../Reporters/Rep_2_Info_5/rep2info_s4.json', 'r') as fp:
        rep2info = json.load(fp)

    return rep2info
        