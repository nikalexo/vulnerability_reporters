#!/usr/bin/env python
# coding: utf-8

# In[1]:


from pymongo import MongoClient
import xml.etree.ElementTree as ET
from git import Repo
import utils, json, sys


# In[2]:


root = ET.parse("./../../config.xml")

DB = root.find("mongodb").find("db").text

client = MongoClient()
db = client[DB]


# In[3]:


try:
    reporters = utils.load_reporters()
    print("Example reporter:", list(reporters.keys())[0])
except:
    print("Could not load reporters!")


# In[ ]:


# 1. Mozilla Core/Firefox (gecko-dev)
repo = Repo("./../../../gecko-dev")
commits = list(repo.iter_commits('master', max_count=1000000))

rep2commits = dict()

mapping_counter = utils.rep2commits(rep2commits, commits, reporters)


# In[ ]:


with open("rep2commits-core-firefox.json", "w") as jf:
    json.dump(rep2commits, jf)

print("Counter gecko-dev:\t", mapping_counter)
print("Number of reporters developed at least one commit:", 
      sum(map(lambda rep : len(rep2commits[rep]) > 0, rep2commits.keys())))


# In[ ]:


# 2. Thunderbird
repo = Repo("./../../../releases-comm-central")
commits = list(repo.iter_commits('master', max_count=1000000))

rep2commits = dict()

mapping_counter = utils.rep2commits(rep2commits, commits, reporters)


# In[ ]:


with open("rep2commits-thunderbird.json", "w") as jf:
    json.dump(rep2commits, jf)
    
print("Counter thunderbird comm-central:", mapping_counter)
print("Number of reporters creating at least one bug:", 
      sum(map(lambda rep : len(rep2commits[rep]) > 0, rep2commits.keys())))


# In[ ]:


# 3. Apache http-server
repo = Repo("./../../../httpd")
commits = list(repo.iter_commits('trunk', max_count=1000000))

rep2commits = dict()

mapping_counter = utils.rep2commits(rep2commits, commits, reporters)


# In[ ]:


with open("rep2commits-apache.json", "w") as jf:
    json.dump(rep2commits, jf)

print("Counter apache:\t", mapping_counter)
print("Number of reporters developed at least one commit:", 
      sum(map(lambda rep : len(rep2commits[rep]) > 0, rep2commits.keys())))


# In[ ]:


# 4. Linux Kernel
repo = Repo("./../../../linux")
commits = list(repo.iter_commits('master', max_count=1000000))

rep2commits = dict()

mapping_counter = utils.rep2commits(rep2commits, commits, reporters)


# In[ ]:


with open("rep2commits-linux.json", "w") as jf:
    json.dump(rep2commits, jf)

print("Counter linux:\t", mapping_counter)
print("Number of reporters developed at least one commit:", 
      sum(map(lambda rep : len(rep2commits[rep]) > 0, rep2commits.keys())))


# In[ ]:


# 5. PHP
repo = Repo("./../../../php-src")
commits = list(repo.iter_commits('master', max_count=1000000))

rep2commits = dict()

mapping_counter = utils.rep2commits(rep2commits, commits, reporters)


# In[ ]:


with open("rep2commits-php.json", "w") as jf:
    json.dump(rep2commits, jf)

print("Counter php:\t", mapping_counter)
print("Number of reporters developed at least one commit:", 
      sum(map(lambda rep : len(rep2commits[rep]) > 0, rep2commits.keys())))


# In[ ]:




