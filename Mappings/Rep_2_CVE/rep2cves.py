#!/usr/bin/env python
# coding: utf-8

# In[1]:


import json, utils
from pymongo import MongoClient
import xml.etree.ElementTree as ET


# In[2]:


root = ET.parse("./../../config.xml")

DB = root.find("mongodb").find("db").text

client = MongoClient()
db = client[DB]


# In[ ]:


try:
    reporters = utils.load_reporters()
    print("Example reporter:", list(reporters.keys())[0])
except:
    print("Could not load reporters!")


# In[ ]:


with open("./../Project_2_CVE/project2cves.json") as jf:
    project2cves = json.load(jf)


# In[3]:


# Apache 
rep2cves = dict()
for rep in reporters:
    rep2cves[rep] = []
    for cve in reporters[rep]["cves"]:
        if cve in project2cves["apache"]:
            rep2cves[rep].append(cve)
with open("rep2cves-apache.json", "w") as jf:
    json.dump(rep2cves, jf)


# In[4]:


# Core/Firefox
rep2cves = dict()
for rep in reporters:
    rep2cves[rep] = []
    for cve in reporters[rep]["cves"]:
        if cve in project2cves["firefox"]:
            rep2cves[rep].append(cve)
with open("rep2cves-core-firefox.json", "w") as jf:
    json.dump(rep2cves, jf)


# In[5]:


# Thunderbird 
rep2cves = dict()
for rep in reporters:
    rep2cves[rep] = []
    for cve in reporters[rep]["cves"]:
        if cve in project2cves["thunderbird"]:
            rep2cves[rep].append(cve)
with open("rep2cves-thunderbird.json", "w") as jf:
    json.dump(rep2cves, jf)


# In[6]:


# Linux 
rep2cves = dict()
for rep in reporters:
    rep2cves[rep] = []
    for cve in reporters[rep]["cves"]:
        if cve in project2cves["linux"]:
            rep2cves[rep].append(cve)
with open("rep2cves-linux.json", "w") as jf:
    json.dump(rep2cves, jf)


# In[7]:


# PHP
rep2cves = dict()
for rep in reporters:
    rep2cves[rep] = []
    for cve in reporters[rep]["cves"]:
        if cve in project2cves["php"]:
            rep2cves[rep].append(cve)
with open("rep2cves-php.json", "w") as jf:
    json.dump(rep2cves, jf)


# In[ ]:




